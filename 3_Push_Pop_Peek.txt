#include <stdio.h>
#include <stdbool.h>

#define MAX_SIZE 100  // Define the maximum size of the stack

int stack[MAX_SIZE];  // Array to hold stack elements
int top = -1;         // Variable to track the top of the stack, initialized to -1 (empty stack)

// Function to push an element onto the stack
void push(int value) {
    // Check if the stack is full
    if (top >= MAX_SIZE - 1) {
        printf("Stack overflow! Cannot push %d onto the stack.\n", value);
        return; // Return without pushing if the stack is full
    }
    stack[++top] = value; // Increment top and add the new value
    printf("Pushed %d onto the stack.\n", value);
}

// Function to pop an element from the stack
int pop() {
    // Check if the stack is empty
    if (top < 0) {
        printf("Stack underflow! Cannot pop from an empty stack.\n");
        return -1; // Return -1 if the stack is empty
    }
    return stack[top--]; // Return the top value and decrement top
}

// Function to peep (view) the top element of the stack
int peep() {
    // Check if the stack is empty
    if (top < 0) {
        printf("Stack is empty! Cannot peep.\n");
        return -1; // Return -1 if the stack is empty
    }
    return stack[top]; // Return the top element
}

// Function to change (modify) the top element of the stack
void change(int newValue) {
    // Check if the stack is empty
    if (top < 0) {
        printf("Stack is empty! Cannot change top element.\n");
        return; // Return without changing if the stack is empty
    }
    stack[top] = newValue; // Change the top element to the new value
    printf("Changed top element to %d.\n", newValue);
}

int main() {
    // Pushing elements onto the stack
    push(10);
    push(20);
    push(30);
    
    // Viewing the top element
    printf("Top element: %d\n", peep());
    
    // Changing the top element
    change(25);
    
    // Popping elements from the stack
    printf("Popped element: %d\n", pop());
    printf("Popped element: %d\n", pop());
    
    // Viewing the new top element after popping
    printf("Top element: %d\n", peep());
    
    return 0; // Exit the program
}
